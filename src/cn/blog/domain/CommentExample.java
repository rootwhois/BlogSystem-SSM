package cn.blog.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CommentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public CommentExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCommentIdIsNull() {
            addCriterion("comment_id is null");
            return (Criteria) this;
        }

        public Criteria andCommentIdIsNotNull() {
            addCriterion("comment_id is not null");
            return (Criteria) this;
        }

        public Criteria andCommentIdEqualTo(Integer value) {
            addCriterion("comment_id =", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdNotEqualTo(Integer value) {
            addCriterion("comment_id <>", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdGreaterThan(Integer value) {
            addCriterion("comment_id >", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("comment_id >=", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdLessThan(Integer value) {
            addCriterion("comment_id <", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdLessThanOrEqualTo(Integer value) {
            addCriterion("comment_id <=", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdIn(List<Integer> values) {
            addCriterion("comment_id in", values, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdNotIn(List<Integer> values) {
            addCriterion("comment_id not in", values, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdBetween(Integer value1, Integer value2) {
            addCriterion("comment_id between", value1, value2, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("comment_id not between", value1, value2, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentTimeIsNull() {
            addCriterion("comment_time is null");
            return (Criteria) this;
        }

        public Criteria andCommentTimeIsNotNull() {
            addCriterion("comment_time is not null");
            return (Criteria) this;
        }

        public Criteria andCommentTimeEqualTo(Date value) {
            addCriterion("comment_time =", value, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeNotEqualTo(Date value) {
            addCriterion("comment_time <>", value, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeGreaterThan(Date value) {
            addCriterion("comment_time >", value, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("comment_time >=", value, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeLessThan(Date value) {
            addCriterion("comment_time <", value, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeLessThanOrEqualTo(Date value) {
            addCriterion("comment_time <=", value, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeIn(List<Date> values) {
            addCriterion("comment_time in", values, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeNotIn(List<Date> values) {
            addCriterion("comment_time not in", values, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeBetween(Date value1, Date value2) {
            addCriterion("comment_time between", value1, value2, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentTimeNotBetween(Date value1, Date value2) {
            addCriterion("comment_time not between", value1, value2, "commentTime");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdIsNull() {
            addCriterion("comment_sub_id is null");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdIsNotNull() {
            addCriterion("comment_sub_id is not null");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdEqualTo(Integer value) {
            addCriterion("comment_sub_id =", value, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdNotEqualTo(Integer value) {
            addCriterion("comment_sub_id <>", value, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdGreaterThan(Integer value) {
            addCriterion("comment_sub_id >", value, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("comment_sub_id >=", value, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdLessThan(Integer value) {
            addCriterion("comment_sub_id <", value, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdLessThanOrEqualTo(Integer value) {
            addCriterion("comment_sub_id <=", value, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdIn(List<Integer> values) {
            addCriterion("comment_sub_id in", values, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdNotIn(List<Integer> values) {
            addCriterion("comment_sub_id not in", values, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdBetween(Integer value1, Integer value2) {
            addCriterion("comment_sub_id between", value1, value2, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentSubIdNotBetween(Integer value1, Integer value2) {
            addCriterion("comment_sub_id not between", value1, value2, "commentSubId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdIsNull() {
            addCriterion("comment_user_id is null");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdIsNotNull() {
            addCriterion("comment_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdEqualTo(Integer value) {
            addCriterion("comment_user_id =", value, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdNotEqualTo(Integer value) {
            addCriterion("comment_user_id <>", value, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdGreaterThan(Integer value) {
            addCriterion("comment_user_id >", value, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("comment_user_id >=", value, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdLessThan(Integer value) {
            addCriterion("comment_user_id <", value, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("comment_user_id <=", value, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdIn(List<Integer> values) {
            addCriterion("comment_user_id in", values, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdNotIn(List<Integer> values) {
            addCriterion("comment_user_id not in", values, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdBetween(Integer value1, Integer value2) {
            addCriterion("comment_user_id between", value1, value2, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("comment_user_id not between", value1, value2, "commentUserId");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameIsNull() {
            addCriterion("comment_nickname is null");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameIsNotNull() {
            addCriterion("comment_nickname is not null");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameEqualTo(String value) {
            addCriterion("comment_nickname =", value, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameNotEqualTo(String value) {
            addCriterion("comment_nickname <>", value, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameGreaterThan(String value) {
            addCriterion("comment_nickname >", value, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameGreaterThanOrEqualTo(String value) {
            addCriterion("comment_nickname >=", value, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameLessThan(String value) {
            addCriterion("comment_nickname <", value, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameLessThanOrEqualTo(String value) {
            addCriterion("comment_nickname <=", value, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameLike(String value) {
            addCriterion("comment_nickname like", value, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameNotLike(String value) {
            addCriterion("comment_nickname not like", value, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameIn(List<String> values) {
            addCriterion("comment_nickname in", values, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameNotIn(List<String> values) {
            addCriterion("comment_nickname not in", values, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameBetween(String value1, String value2) {
            addCriterion("comment_nickname between", value1, value2, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentNicknameNotBetween(String value1, String value2) {
            addCriterion("comment_nickname not between", value1, value2, "commentNickname");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdIsNull() {
            addCriterion("comment_article_id is null");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdIsNotNull() {
            addCriterion("comment_article_id is not null");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdEqualTo(Integer value) {
            addCriterion("comment_article_id =", value, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdNotEqualTo(Integer value) {
            addCriterion("comment_article_id <>", value, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdGreaterThan(Integer value) {
            addCriterion("comment_article_id >", value, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("comment_article_id >=", value, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdLessThan(Integer value) {
            addCriterion("comment_article_id <", value, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdLessThanOrEqualTo(Integer value) {
            addCriterion("comment_article_id <=", value, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdIn(List<Integer> values) {
            addCriterion("comment_article_id in", values, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdNotIn(List<Integer> values) {
            addCriterion("comment_article_id not in", values, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdBetween(Integer value1, Integer value2) {
            addCriterion("comment_article_id between", value1, value2, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentArticleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("comment_article_id not between", value1, value2, "commentArticleId");
            return (Criteria) this;
        }

        public Criteria andCommentEmailIsNull() {
            addCriterion("comment_email is null");
            return (Criteria) this;
        }

        public Criteria andCommentEmailIsNotNull() {
            addCriterion("comment_email is not null");
            return (Criteria) this;
        }

        public Criteria andCommentEmailEqualTo(String value) {
            addCriterion("comment_email =", value, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailNotEqualTo(String value) {
            addCriterion("comment_email <>", value, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailGreaterThan(String value) {
            addCriterion("comment_email >", value, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailGreaterThanOrEqualTo(String value) {
            addCriterion("comment_email >=", value, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailLessThan(String value) {
            addCriterion("comment_email <", value, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailLessThanOrEqualTo(String value) {
            addCriterion("comment_email <=", value, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailLike(String value) {
            addCriterion("comment_email like", value, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailNotLike(String value) {
            addCriterion("comment_email not like", value, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailIn(List<String> values) {
            addCriterion("comment_email in", values, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailNotIn(List<String> values) {
            addCriterion("comment_email not in", values, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailBetween(String value1, String value2) {
            addCriterion("comment_email between", value1, value2, "commentEmail");
            return (Criteria) this;
        }

        public Criteria andCommentEmailNotBetween(String value1, String value2) {
            addCriterion("comment_email not between", value1, value2, "commentEmail");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbg.generated do_not_delete_during_merge Fri Nov 27 19:46:20 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbg.generated Fri Nov 27 19:46:20 CST 2020
     */
    public static class Criterion {
        private final String condition;
        private final String typeHandler;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}